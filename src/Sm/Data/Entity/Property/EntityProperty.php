<?php


namespace Sm\Data\Entity\Property;


use Sm\Core\Context\Context;
use Sm\Data\Entity\Property\Validation\EntityPropertyValidationResult;
use Sm\Data\Entity\Validation\EntityValidationResult;
use Sm\Data\Evaluation\Validation\ValidationResult;
use Sm\Data\Property\Property;
use Sm\Data\Property\Validation\PropertyValidationResult;
use Sm\Data\Type\String_;

class EntityProperty extends Property implements EntityPropertySchema {
	protected function getValidationResult($success = false, $error = null): PropertyValidationResult {
		return new EntityPropertyValidationResult(...func_get_args());
	}
	/**
	 * @param \Sm\Core\Context\Context|null $context
	 *
	 * @return null|\Sm\Data\Evaluation\Validation\ValidationResult
	 * @throws \Sm\Core\Exception\UnimplementedError
	 */
	public function validate(Context $context = null): ?ValidationResult {
		$parent = parent::validate($context); // TODO: Change the autogenerated stub
		if (!isset($parent)) {
			$resolved_value = $this->resolve();
			$datatype       = $this->getPrimaryDatatype();
			/** @var \Sm\Data\Entity\Property\EntityPropertySchematic $schematic */
			$schematic = $this->getEffectiveSchematic();


			if ($schematic instanceof EntityPropertySchematic && $datatype instanceof String_) {
				$minLength = $schematic ? $schematic->getMinLength() : null;
				if (isset($minLength) && strlen($resolved_value) < $minLength) {
					$too_short_message        = 'Too short - must be at least ' . $minLength . ' characters';
					$propertyValidationResult = new EntityPropertyValidationResult(false, $too_short_message);
					$propertyValidationResult->setFailedAttributes([PropertyValidationResult::ATTR__LENGTH => $resolved_value]);
					return $propertyValidationResult;
				}

			}
		}
		return $parent;
	}
	public function jsonSerialize() {
		$value = $this->value;
		if ($value instanceof \DateTime) {
			return $value->format(DATE_ISO8601);
		} else {
			return parent::jsonSerialize();
		}
	}
}